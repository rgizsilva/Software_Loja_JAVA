package lojastanger_telas;

import dados.Venda;
import dados.Vendadao;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author Regi
 */
public class Atualizar_gerencia extends javax.swing.JFrame {

    /**
     * Creates new form Atualizar_gerencia
     */
    public Atualizar_gerencia() {
        initComponents();
        this.PreencherTabela("");
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NO modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        textField1 = new java.awt.TextField();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        cupomcampo = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        qntdcampo = new javax.swing.JTextField();
        nomecampo = new javax.swing.JTextField();
        idclientecampo = new javax.swing.JTextField();
        cpfcampo = new javax.swing.JTextField();
        idvendedorcampo = new javax.swing.JTextField();
        idprodutocampo = new javax.swing.JTextField();
        valorcampo = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        primeiracompracheck = new javax.swing.JCheckBox();
        datacampo = new javax.swing.JFormattedTextField();
        jLabel15 = new javax.swing.JLabel();
        idcampo = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        atualizarvenda = new javax.swing.JButton();
        voltarbotao = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        vendas_table = new javax.swing.JTable();

        textField1.setText("textField1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel2.setBackground(new java.awt.Color(204, 204, 204));

        cupomcampo.setBackground(new java.awt.Color(255, 255, 255));
        cupomcampo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cupomcampoActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 0, 0));
        jLabel5.setText("ID");

        jLabel6.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 0, 0));
        jLabel6.setText("NOME");

        jLabel7.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(0, 0, 0));
        jLabel7.setText("ID CLIENTE");

        jLabel8.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(0, 0, 0));
        jLabel8.setText("CPF");

        jLabel9.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(0, 0, 0));
        jLabel9.setText("ID VENDEDOR");

        jLabel10.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(0, 0, 0));
        jLabel10.setText("ID PRODUTO");

        jLabel11.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(0, 0, 0));
        jLabel11.setText("VALOR");

        jLabel12.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(0, 0, 0));
        jLabel12.setText("CUPOM");

        qntdcampo.setBackground(new java.awt.Color(255, 255, 255));
        qntdcampo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                qntdcampoActionPerformed(evt);
            }
        });

        nomecampo.setBackground(new java.awt.Color(255, 255, 255));
        nomecampo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nomecampoActionPerformed(evt);
            }
        });

        idclientecampo.setBackground(new java.awt.Color(255, 255, 255));
        idclientecampo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                idclientecampoActionPerformed(evt);
            }
        });

        cpfcampo.setBackground(new java.awt.Color(255, 255, 255));
        cpfcampo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cpfcampoActionPerformed(evt);
            }
        });

        idvendedorcampo.setBackground(new java.awt.Color(255, 255, 255));
        idvendedorcampo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                idvendedorcampoActionPerformed(evt);
            }
        });

        idprodutocampo.setBackground(new java.awt.Color(255, 255, 255));
        idprodutocampo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                idprodutocampoActionPerformed(evt);
            }
        });

        valorcampo.setBackground(new java.awt.Color(255, 255, 255));
        valorcampo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                valorcampoActionPerformed(evt);
            }
        });

        jLabel13.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(0, 0, 0));
        jLabel13.setText("PRIMEIRA COMPRA");

        jLabel14.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(0, 0, 0));
        jLabel14.setText("QUANTIDADE");

        primeiracompracheck.setBackground(new java.awt.Color(255, 255, 255));
        primeiracompracheck.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                primeiracompracheckActionPerformed(evt);
            }
        });

        datacampo.setBackground(new java.awt.Color(255, 255, 255));
        try {
            datacampo.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        datacampo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                datacampoActionPerformed(evt);
            }
        });

        jLabel15.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(0, 0, 0));
        jLabel15.setText("DATA");

        idcampo.setBackground(new java.awt.Color(255, 255, 255));
        idcampo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                idcampoActionPerformed(evt);
            }
        });

        jLabel1.setText("Clique sobre a venda na tabela para atualizar");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel12)
                    .addComponent(jLabel11)
                    .addComponent(jLabel10)
                    .addComponent(jLabel9)
                    .addComponent(jLabel8)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addComponent(jLabel5)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 75, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(idclientecampo, javax.swing.GroupLayout.PREFERRED_SIZE, 269, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(cupomcampo, javax.swing.GroupLayout.PREFERRED_SIZE, 269, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(cpfcampo, javax.swing.GroupLayout.PREFERRED_SIZE, 269, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(idvendedorcampo, javax.swing.GroupLayout.PREFERRED_SIZE, 269, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(nomecampo, javax.swing.GroupLayout.PREFERRED_SIZE, 269, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(jPanel2Layout.createSequentialGroup()
                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(valorcampo, javax.swing.GroupLayout.PREFERRED_SIZE, 269, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(idprodutocampo, javax.swing.GroupLayout.PREFERRED_SIZE, 269, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGap(43, 43, 43)
                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addGroup(jPanel2Layout.createSequentialGroup()
                                            .addComponent(jLabel13)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(primeiracompracheck))
                                        .addGroup(jPanel2Layout.createSequentialGroup()
                                            .addComponent(jLabel14)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(qntdcampo)))))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(idcampo, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel15)
                                .addGap(18, 18, 18)
                                .addComponent(datacampo, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 397, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(73, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(datacampo)
                    .addComponent(jLabel15)
                    .addComponent(idcampo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(nomecampo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(idclientecampo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(cpfcampo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(idvendedorcampo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(idprodutocampo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14)
                    .addComponent(qntdcampo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(valorcampo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13)
                    .addComponent(primeiracompracheck))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(cupomcampo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12))
        );

        atualizarvenda.setBackground(new java.awt.Color(51, 153, 0));
        atualizarvenda.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
        atualizarvenda.setForeground(new java.awt.Color(255, 255, 255));
        atualizarvenda.setText("Atualizar");
        atualizarvenda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                atualizarvendaActionPerformed(evt);
            }
        });

        voltarbotao.setText("VOLTAR");
        voltarbotao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                voltarbotaoActionPerformed(evt);
            }
        });

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/Polygon 1.png"))); // NOI18N

        jScrollPane1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jScrollPane1MouseClicked(evt);
            }
        });

        vendas_table.setBackground(new java.awt.Color(204, 204, 204));
        vendas_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "DATA", "CLIENTE", "ID CLIENTE", "CPF", "ID VENDEDOR", "ID PRODUTOS", "QUANTIDADE", "VALOR", "PRIMEIRA COMPRA", "CUPOM"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Integer.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        vendas_table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                vendas_tableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(vendas_table);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(9, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(voltarbotao, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(atualizarvenda, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(11, 11, 11))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(atualizarvenda, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(voltarbotao, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 163, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void voltarbotaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_voltarbotaoActionPerformed
        Gerencia_vendas gerencia = new Gerencia_vendas();
        this.dispose();
        gerencia.setVisible(true);
    }//GEN-LAST:event_voltarbotaoActionPerformed

    private void atualizarvendaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_atualizarvendaActionPerformed
        
        String data = datacampo.getText();
        String nome = nomecampo.getText();
        String id_cliente = idclientecampo.getText();
        String cpf = cpfcampo.getText();
        String id_vendedor = idvendedorcampo.getText();
        String id_produto = idprodutocampo.getText();
        String valor = valorcampo.getText();
        String cupom = cupomcampo.getText();
        String quantidade = qntdcampo.getText();
        String id =idcampo.getText();

        Vendadao vendadao = new Vendadao();
        Venda venda = new Venda();

        int resposta;
        boolean status = vendadao.conectar();
        if (id.isEmpty()) {
            JOptionPane.showMessageDialog(null, "O campo id deve ser preenchido. ");
        } else {
            int id1 = Integer.parseInt(id);
            venda.setId(id1);
            boolean verid = id.matches("[0-9]+");
            if (verid == false) {
                JOptionPane.showMessageDialog(null, "Preencha o id corretamente. ");
            } else {
                if (nome.isEmpty()) {
                    JOptionPane.showMessageDialog(null, "O campo nome deve ser preenchido. ");
                } else {
                    venda.setNomeCliente(nomecampo.getText());
                    boolean verNome = nome.matches("[a-zA-Z]+");
                    if (verNome == false) {
                        JOptionPane.showMessageDialog(null, "Preencha o nome corretamente. ");
                    } else {
                        if (data.isEmpty()) {
                            JOptionPane.showMessageDialog(null, "O campo data deve ser preenchido. ");
                        } else {
                            boolean verData = data.matches("[0-9]{2}[/][0-9]{2}[/][0-9]{4}");
                            if (verData == false) {
                                JOptionPane.showMessageDialog(null, "O campo data deve ser preenchido no formato DD/MM/AAAA. ");
                            } else {
                                if (id_cliente.isEmpty()) {
                                    JOptionPane.showMessageDialog(null, "O campo id_cliente deve ser preenchido. ");
                                } else {
                                    int idcli = Integer.parseInt(id_cliente);
                                    venda.setCodCliente(idcli);
                                    boolean vercli = id_cliente.matches("[0-9]+");
                                    if (vercli == false) {
                                        JOptionPane.showMessageDialog(null, "Preencha o campo id_cliente somente com números. ");
                                    } else {
                                        if (cpf.isEmpty()) {
                                            JOptionPane.showMessageDialog(null, "O campo cpf deve ser preenchido. ");
                                        } else {

                                            venda.setCpfCliente(cpfcampo.getText());
                                            boolean vercpf = cpf.matches("[0-9]+");
                                            if (vercpf == false) {
                                                JOptionPane.showMessageDialog(null, "Preencha o campo cpf somente com números. ");
                                            } else {
                                                if (id_vendedor.isEmpty()) {
                                                    JOptionPane.showMessageDialog(null, "O campo id_vendedor deve ser preenchido. ");
                                                } else {
                                                    int idven = Integer.parseInt(id_vendedor);
                                                    venda.setCodVendedor(idven);
                                                    boolean verven = id_vendedor.matches("[0-9]+");
                                                    if (verven == false) {
                                                        JOptionPane.showMessageDialog(null, "Preencha o campo id_cvendedor somente com números. ");
                                                    } else {
                                                        if (id_produto.isEmpty()) {
                                                            JOptionPane.showMessageDialog(null, "O campo id_produto deve ser preenchido. ");
                                                        } else {
                                                            int idprod = Integer.parseInt(id_produto);
                                                            venda.setCodProduto(idprod);
                                                            boolean verprod = id_produto.matches("[0-9]+");
                                                            if (verprod == false) {
                                                                JOptionPane.showMessageDialog(null, "Preencha o campo id_produto somente com números. ");
                                                            } else {
                                                                venda.setCupom(cupomcampo.getText());

                                                                if (quantidade.isEmpty()) {
                                                                    JOptionPane.showMessageDialog(null, "O campo quantidade deve ser preenchido. ");
                                                                } else {
                                                                    int quant = Integer.parseInt(quantidade);
                                                                    venda.setQntdProd(quant);
                                                                    boolean verquant = quantidade.matches("[0-9]+");
                                                                    if (verquant == false) {
                                                                        JOptionPane.showMessageDialog(null, "Preencha o campo quantidade somente com números. ");
                                                                    } else {
                                                                        if (valor.isEmpty()) {
                                                                            JOptionPane.showMessageDialog(null, "O campo valor deve ser preenchido. ");
                                                                        } else {
                                                                            double val = Double.parseDouble(valor);
                                                                            venda.setValorTotal(val);
                                                                            boolean verval = quantidade.matches("[0-9]+");
                                                                            if (verval == false) {
                                                                                JOptionPane.showMessageDialog(null, "Preencha o campo valor no formato XX.XX. ");

                                                                            } else {
                                                                                try {
                                                                                    if (primeiracompracheck.isSelected()) {
                                                                                        venda.setPrimeiraCompra("sim");
                                                                                    } else {
                                                                                        venda.setPrimeiraCompra("Não");
                                                                                    }
                                                                                    SimpleDateFormat dataconv = new SimpleDateFormat("dd/MM/yyyy");
                                                                                    Date data2 = dataconv.parse(data);
                                                                                    java.sql.Date sqldate = new java.sql.Date(data2.getTime());
                                                                                    venda.setData(sqldate);
                                                                                } catch (ParseException ex) {
                                                                                    System.out.println("Erro na conversão da data");
                                                                                }

                                                                                if (status == false) {
                                                                                    JOptionPane.showMessageDialog(null, "Erro de conexão");
                                                                                } else {
                                                                                    resposta = vendadao.atualizar(venda); // salvando o objeto filme no banco de dados
                                                                                    if (resposta == 1) {

                                                                                        JOptionPane.showMessageDialog(null, "Dados incluidos com sucesso");
                                                                                        limparCampos();
                                                                                    } else if (resposta == 1062) {
                                                                                        JOptionPane.showMessageDialog(null, "Id de Venda ja foi cadastrado");
                                                                                    } else {
                                                                                        JOptionPane.showMessageDialog(null, "Erro ao tentar inserir dados");

                                                                                    }
                                                                                    PreencherTabela("");

                                                                                    vendadao.desconectar();
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }

                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    
    }//GEN-LAST:event_atualizarvendaActionPerformed
    
    private void idcampoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_idcampoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_idcampoActionPerformed

    private void datacampoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_datacampoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_datacampoActionPerformed

    private void primeiracompracheckActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_primeiracompracheckActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_primeiracompracheckActionPerformed

    private void valorcampoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_valorcampoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_valorcampoActionPerformed

    private void idprodutocampoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_idprodutocampoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_idprodutocampoActionPerformed

    private void idvendedorcampoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_idvendedorcampoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_idvendedorcampoActionPerformed

    private void cpfcampoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cpfcampoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cpfcampoActionPerformed

    private void idclientecampoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_idclientecampoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_idclientecampoActionPerformed

    private void nomecampoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nomecampoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nomecampoActionPerformed

    private void qntdcampoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_qntdcampoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_qntdcampoActionPerformed

    private void cupomcampoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cupomcampoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cupomcampoActionPerformed

    private void jScrollPane1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jScrollPane1MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jScrollPane1MouseClicked

    private void vendas_tableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_vendas_tableMouseClicked
        int linha = vendas_table.getSelectedRow();
        this.consultar((int) vendas_table.getValueAt(linha, 0));
        idcampo.setEditable(false);
    }//GEN-LAST:event_vendas_tableMouseClicked
    public String Datareversa(String data) {
        String dia = data.substring(8);
        String mes = data.substring(5, 7);
        String ano = data.substring(0, 4);
        String sqlDate = dia + "/" + mes + "/" + ano;
        return sqlDate;// convertendo a data no formato sql para o formato brasileiro
    }
    private void consultar(int id) {
        Vendadao vendadao = new Vendadao();
        boolean status = vendadao.conectar();
        if (status) {
            Venda venda = vendadao.consultar(id);
            if (venda == null) {
                JOptionPane.showMessageDialog(null, "Venda não localizada");
            } else {
                datacampo.setText(this.Datareversa(String.valueOf(venda.getData())));
                int ids = venda.getId();
                idcampo.setText(String.valueOf(ids));
                nomecampo.setText(venda.getNomeCliente());
                int idcliente = venda.getCodCliente();
                idclientecampo.setText(String.valueOf(idcliente));
                cpfcampo.setText(venda.getCpfCliente());
                int idvendedor = venda.getCodVendedor();
                idvendedorcampo.setText(String.valueOf(idvendedor));
                int idproduto = venda.getCodProduto();
                idprodutocampo.setText(String.valueOf(idproduto));
                double valorcupom = venda.getValorTotal();
                valorcampo.setText(String.valueOf(valorcupom));
                cupomcampo.setText(venda.getCupom());
                int quantidade = venda.getQntdProd();
                qntdcampo.setText(String.valueOf(quantidade));

            }
            vendadao.desconectar();

        } else {
            JOptionPane.showMessageDialog(null, "Erro de conexão");
        }
    }
    
    private void PreencherTabela(String filtro) {
        Vendadao vendadao = new Vendadao();
        boolean status = vendadao.conectar();
        if (status == false) {
            JOptionPane.showMessageDialog(null, "Erro de conexão");
        } else {
            List<Venda> listavenda = vendadao.listagem(filtro);
            DefaultTableModel tabelavenda = (DefaultTableModel) vendas_table.getModel();
            tabelavenda.setColumnIdentifiers(new Object[]{"ID", "Data", "Nome do Cliente", "Código do Cliente", "CPF do Cliente", "Código do Vendedor", "Código do Produto", "Valor Total", "Cupom", "Quantidade de Produtos", "Primeira Compra"});
            vendas_table.setRowSorter(new TableRowSorter(tabelavenda));
            tabelavenda.setNumRows(0);
            System.out.println("aqui");
            for (Venda v : listavenda) {
                Object[] object = new Object[]{
                    v.getId(),
                    this.Datareversa(String.valueOf(v.getData())),
                    v.getNomeCliente(),
                    v.getCodCliente(),
                    v.getCpfCliente(),
                    v.getCodVendedor(),
                    v.getCodProduto(),
                    v.getValorTotal(),
                    v.getCupom(),
                    v.getQntdProd(),
                    v.getPrimeiraCompra()
                };
                System.out.println("aqui");
                tabelavenda.addRow(object);
                System.out.println(v.getNomeCliente());                                // add o objeto venda com seus atributos na tabela 
            }
            vendadao.desconectar();
        }
    }
    public void limparCampos() {
        nomecampo.setText("");
        datacampo.setText("");
        idclientecampo.setText("");
        idprodutocampo.setText("");
        idvendedorcampo.setText("");
        cpfcampo.setText("");
        cupomcampo.setText("");
        valorcampo.setText("");
        qntdcampo.setText("");
        idcampo.setText("");
    }

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Atualizar_gerencia.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Atualizar_gerencia.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Atualizar_gerencia.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Atualizar_gerencia.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Atualizar_gerencia().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton atualizarvenda;
    private javax.swing.JTextField cpfcampo;
    private javax.swing.JTextField cupomcampo;
    private javax.swing.JFormattedTextField datacampo;
    private javax.swing.JTextField idcampo;
    private javax.swing.JTextField idclientecampo;
    private javax.swing.JTextField idprodutocampo;
    private javax.swing.JTextField idvendedorcampo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField nomecampo;
    private javax.swing.JCheckBox primeiracompracheck;
    private javax.swing.JTextField qntdcampo;
    private java.awt.TextField textField1;
    private javax.swing.JTextField valorcampo;
    private javax.swing.JTable vendas_table;
    private javax.swing.JButton voltarbotao;
    // End of variables declaration//GEN-END:variables
}
